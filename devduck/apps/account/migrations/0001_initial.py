# Generated by Django 4.2.1 on 2023-05-08 12:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('matriculation', models.CharField(error_messages={'unique': 'Já existe um usuário com essa matrícula.'}, max_length=150, unique=True, verbose_name='matrícula')),
                ('username', models.CharField(error_messages={'unique': 'Já existe um usuário com esse nome.'}, max_length=150, unique=True, verbose_name='nome de usuário')),
                ('email', models.EmailField(error_messages={'unique': 'Já existe um usuário com esse email.'}, max_length=254, unique=True, verbose_name='endereço de email')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Equipe')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Super Usuário')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='data de entrada')),
                ('date_changed', models.DateTimeField(auto_now=True, verbose_name='data de alteração')),
                ('token', models.CharField(blank=True, max_length=150, null=True, verbose_name='token')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
            },
        ),
    ]
